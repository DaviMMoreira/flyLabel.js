#!/usr/bin/env ruby

require 'erb'
require 'pygments'

PROJECT_ROOT = `git rev-parse --show-toplevel`.strip
DEMO_DIR = PROJECT_ROOT + '/demo'

Dir.chdir DEMO_DIR

module Demo
  class Behavior
    attr_reader :placeholder
    attr_accessor :name, :styles
    @@styles = ''
    def initialize(path)
      style = File.open(path, 'r').read
      @@styles += style
      @styles = Pygments.highlight(style, lexer: 'css')
      @name = get_name_from path
      @placeholder = get_placeholder_from @name
      return self
    end
    def self.get_styles
      @@styles
    end
    private
    def get_name_from path
      path.split(%r{[\/\.]})[-2]
    end
    def get_placeholder_from name
      name.capitalize
    end
  end

  class DemoPage
    attr_reader :behaviors, :styles
    def initialize
      @renderer = get_renderer()
      @behaviors = get_behaviors()
      @styles = Pygments.css style: 'monokai'
      @styles += Behavior.get_styles()
    end
    def render
      return @renderer.result(get_binding)
    end
    private
    def get_renderer
      template = File.open(DEMO_DIR + '/index.html.erb', 'r').read
      return ERB.new(template)
    end
    def get_behaviors
      paths = Dir.glob(File.join('behaviors', '*.css'))
      return paths.map do |path|
        Behavior.new(path)
      end
    end
    def get_binding
      binding
    end
  end
end

puts Demo::DemoPage.new().render()
